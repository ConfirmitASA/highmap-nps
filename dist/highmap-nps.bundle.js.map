{"version":3,"sources":["webpack:///highmap-nps.bundle.js","webpack:///webpack/bootstrap 3e6ee630417e29767023","webpack:///./src/main.js","webpack:///./src/highmaps-nps.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_highmapsNps","_highmapsNps2","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","HighMapsNPS","_ref","arguments","undefined","table","_ref$columnNames","columnNames","containerID","_ref$dataClasses","dataClasses","from","to","color","name","map","options","this","Highcharts","Error","maps","data","getData","createMap","getHeaders","slice","querySelectorAll","reduce","init","row","index","children","forEach","td","val","textContent","trim","toLowerCase","split","x","charAt","toUpperCase","join","isNaN","parseFloat","o","cell","source","headers","a","push","columnHeaders","config","chart","borderWidth","title","text","legend","layout","backgroundColor","floating","verticalAlign","y","mapNavigation","enabled","colorAxis","series","mapData","joinBy","allAreas","dataLabels","format","tooltip","pointFormat","composeOutput","mixin","mapChart"],"mappings":"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","file":"highmap-nps.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _highmapsNps = __webpack_require__(1);\n\t\n\tvar _highmapsNps2 = _interopRequireDefault(_highmapsNps);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = _highmapsNps2.default; /**\n\t                                          * Created by IvanP on 07.09.2016.\n\t                                          */\n\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HighMapsNPS = function () {\n\t  /**\n\t   * @param {HTMLTableElement} table - table element where the data is storage\n\t   * @param {Array} columnNames - array of column names of data table\n\t   * @param {String} containerID - container for rendering map\n\t   * @param {Array} dataClasses - set of colored groups for map\n\t   * @param {String} map - key for Higchart.maps\n\t   * @param {Object} options - options for HighMap chart\n\t   *\n\t   */\n\t  function HighMapsNPS() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        table = _ref.table,\n\t        _ref$columnNames = _ref.columnNames,\n\t        columnNames = _ref$columnNames === undefined ? [] : _ref$columnNames,\n\t        containerID = _ref.containerID,\n\t        _ref$dataClasses = _ref.dataClasses,\n\t        dataClasses = _ref$dataClasses === undefined ? [{\n\t      from: 80,\n\t      to: 100,\n\t      color: '#8bc34a',\n\t      name: 'Promoter'\n\t    }, {\n\t      from: 60,\n\t      to: 80,\n\t      color: '#ffc107',\n\t      name: 'Passive'\n\t    }, {\n\t      from: 0,\n\t      to: 60,\n\t      color: '#f44336',\n\t      name: 'Detractor'\n\t    }] : _ref$dataClasses,\n\t        map = _ref.map,\n\t        options = _ref.options;\n\t\n\t    _classCallCheck(this, HighMapsNPS);\n\t\n\t    if ((typeof Highcharts === 'undefined' ? 'undefined' : _typeof(Highcharts)) == undefined) {\n\t      throw new Error('Highcharts must be declared. Probably they are missing');\n\t    }\n\t    if (_typeof(Highcharts.maps) == undefined) {\n\t      throw new Error('HighMaps must be loaded. Probably they are missing');\n\t    }\n\t    var data = this.constructor.getData(table, columnNames);\n\t    this.constructor.createMap(options, containerID, data, map, dataClasses, this.constructor.getHeaders(table, columnNames));\n\t  }\n\t\n\t  /**\n\t  * Strips data from `table`\n\t  * @param {HTMLTableElement} table - table element\n\t  * @param {Array} columnNames - names of columns in resulting object\n\t  * @returns {Array} returns set of objects\n\t  */\n\t\n\t\n\t  _createClass(HighMapsNPS, null, [{\n\t    key: 'getData',\n\t    value: function getData(table, columnNames) {\n\t      return [].slice.call(table.querySelectorAll('tbody>tr')).reduce(function (init, row, index) {\n\t        init[index] = {};\n\t        [].slice.call(row.children).forEach(function (td, i) {\n\t          var val = td.textContent.trim();\n\t          val = val === \"DISTRICT OF COLUMBIA\" ? \"District of Columbia\" : val.toLowerCase().split(\" \").map(function (x) {\n\t            return x.charAt(0).toUpperCase() + x.slice(1);\n\t          }).join(\" \");\n\t          if (columnNames[i]) init[index][columnNames[i]] = val.length != 0 ? isNaN(parseFloat(val)) ? val : parseFloat(val) : null;\n\t        });\n\t        return init;\n\t      }, []);\n\t    }\n\t\n\t    /**\n\t    * Strips header from `table`\n\t    * @param {HTMLTableElement} table - table element\n\t    * @param {Array} columnNames - names of columns in resulting object\n\t    * @returns {Object} returns object where <key> : <column name> info stored\n\t    */\n\t\n\t  }, {\n\t    key: 'getHeaders',\n\t    value: function getHeaders(table, columnNames) {\n\t      var o = {};\n\t      [].slice.call(table.querySelectorAll('thead>tr>td')).forEach(function (cell, index) {\n\t        var val = cell.textContent.trim();\n\t        if (columnNames[index]) o[columnNames[index]] = val.length != 0 ? val : null;\n\t      });\n\t      return o;\n\t    }\n\t    /**\n\t     * Copies props from a source object to a target object.\n\t     *\n\t     * Note, this method uses a simple `for...in` strategy for enumerating\n\t     * properties.  To ensure only `ownProperties` are copied from source\n\t     * to target and that accessor implementations are copied, use `extend`.\n\t     * @param {Object} target Target object to copy properties to.\n\t     * @param {Object} source Source object to copy properties from.\n\t     * @return {Object} Target object that was passed as first argument.\n\t     */\n\t\n\t  }, {\n\t    key: 'mixin',\n\t    value: function mixin(target, source) {\n\t      for (var i in source) {\n\t        target[i] = source[i];\n\t      }\n\t      return target;\n\t    }\n\t    /**\n\t    * Makes output for mapChart tooltip point format\n\t    * @params {Array} headers - data to be added to tooltip\n\t    * @returns {String}\n\t    */\n\t\n\t  }, {\n\t    key: 'composeOutput',\n\t    value: function composeOutput(headers) {\n\t      var a = ['<b>{point.name}</b>: {point.value}'];\n\t      for (var key in headers) {\n\t        if (key !== \"name\" && key !== \"value\") {\n\t          a.push('<b>' + headers[key] + '</b>: {point.' + key + '}');\n\t        }\n\t      }\n\t      return a.join('<br>');\n\t    }\n\t    /**\n\t    * Creates highmap\n\t    * @param {Object} options - options for HighMap chart\n\t    * @param {String} containerID - container for rendering map\n\t    * @param {Object} data - input data for highmap\n\t    * @param {String} map - key for Higchart.maps\n\t    * @param {Array} dataClasses - set of colored groups for map\n\t    * @param {Array} columnHeaders an array where <key>: column name and <value>:column header\n\t    */\n\t\n\t  }, {\n\t    key: 'createMap',\n\t    value: function createMap(options, containerID, data, map, dataClasses, columnHeaders) {\n\t      var config = {\n\t        chart: {\n\t          borderWidth: 1\n\t        },\n\t\n\t        title: {\n\t          text: ''\n\t        },\n\t\n\t        legend: {\n\t          layout: 'horizontal',\n\t          borderWidth: 0,\n\t          backgroundColor: 'rgba(255,255,255,0.85)',\n\t          floating: false,\n\t          verticalAlign: 'bottom',\n\t          y: 10\n\t        },\n\t\n\t        mapNavigation: {\n\t          enabled: true\n\t        },\n\t\n\t        colorAxis: {\n\t          dataClasses: dataClasses\n\t        },\n\t\n\t        series: [{\n\t          data: data,\n\t          mapData: Highcharts.maps[map],\n\t          joinBy: ['name', 'name'],\n\t          allAreas: false,\n\t          dataLabels: {\n\t            enabled: true,\n\t            color: '#FFFFFF',\n\t            format: '{point.name}'\n\t          },\n\t          name: '<b>' + columnHeaders.value + '</b>',\n\t          tooltip: {\n\t            pointFormat: HighMapsNPS.composeOutput(columnHeaders)\n\t          }\n\t        }]\n\t      };\n\t      config = HighMapsNPS.mixin(config, options);\n\t      Highcharts.mapChart(containerID, config);\n\t    }\n\t  }]);\n\t\n\t  return HighMapsNPS;\n\t}();\n\t\n\texports.default = HighMapsNPS;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// highmap-nps.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e6ee630417e29767023","/**\n * Created by IvanP on 07.09.2016.\n */\n\nimport HighMapsNPS from \"./highmaps-nps\";\nexport default HighMapsNPS\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","class HighMapsNPS{\n  /**\n   * @param {HTMLTableElement} table - table element where the data is storage\n   * @param {Array} columnNames - array of column names of data table\n   * @param {String} containerID - container for rendering map\n   * @param {Array} dataClasses - set of colored groups for map\n   * @param {String} map - key for Higchart.maps\n   * @param {Object} options - options for HighMap chart\n   *\n   */\n    constructor({table,columnNames=[],containerID, dataClasses = [{\n                  from: 80,\n                  to: 100,\n                  color: '#8bc34a',\n                  name: 'Promoter'\n              },{\n                  from: 60,\n                  to: 80,\n                  color: '#ffc107',\n                  name: 'Passive'\n              },{\n                  from: 0,\n                  to: 60,\n                  color: '#f44336',\n                  name: 'Detractor'\n              }], map,options}={}){\n      if(typeof Highcharts == undefined){throw new Error('Highcharts must be declared. Probably they are missing')}\n      if(typeof Highcharts.maps == undefined){throw new Error('HighMaps must be loaded. Probably they are missing')}\n      let data = this.constructor.getData(table,columnNames);\n      this.constructor.createMap(options, containerID, data, map, dataClasses,this.constructor.getHeaders(table,columnNames));\n    }\n\n    /**\n    * Strips data from `table`\n    * @param {HTMLTableElement} table - table element\n    * @param {Array} columnNames - names of columns in resulting object\n    * @returns {Array} returns set of objects\n    */\n    static getData(table,columnNames){\n      return [].slice.call(table.querySelectorAll('tbody>tr')).reduce((init,row,index)=>{\n        init[index]= {};\n        [].slice.call(row.children).forEach((td,i)=>{\n          let val = td.textContent.trim();\n          val = val === \"DISTRICT OF COLUMBIA\" ? \"District of Columbia\" : val.toLowerCase().split(\" \").map(x => x.charAt(0).toUpperCase() + x.slice(1)).join(\" \");\n          if(columnNames[i])init[index][columnNames[i]] = val.length!=0?isNaN(parseFloat(val))?val:parseFloat(val):null;\n       });\n        return init;\n      },[]);\n    }\n\n    /**\n    * Strips header from `table`\n    * @param {HTMLTableElement} table - table element\n    * @param {Array} columnNames - names of columns in resulting object\n    * @returns {Object} returns object where <key> : <column name> info stored\n    */\n    static getHeaders(table,columnNames){\n      let o = {};\n      [].slice.call(table.querySelectorAll('thead>tr>td')).forEach((cell,index)=>{\n          let val = cell.textContent.trim();\n          if(columnNames[index])\n            o[columnNames[index]] = val.length!=0?val:null;\n      });\n      return o;\n    }\n  /**\n   * Copies props from a source object to a target object.\n   *\n   * Note, this method uses a simple `for...in` strategy for enumerating\n   * properties.  To ensure only `ownProperties` are copied from source\n   * to target and that accessor implementations are copied, use `extend`.\n   * @param {Object} target Target object to copy properties to.\n   * @param {Object} source Source object to copy properties from.\n   * @return {Object} Target object that was passed as first argument.\n   */\n  static mixin(target, source) {\n    for (let i in source) {\n      target[i] = source[i];\n    }\n    return target;\n  }\n    /**\n    * Makes output for mapChart tooltip point format\n    * @params {Array} headers - data to be added to tooltip\n    * @returns {String}\n    */\n    static composeOutput(headers){\n      let a = ['<b>{point.name}</b>: {point.value}'];\n        for (let key in headers){\n        if (key !== \"name\" && key !== \"value\"){\n          a.push(`<b>${headers[key]}</b>: {point.${key}}`);\n        }\n       }\n      return a.join('<br>');\n    }\n    /**\n    * Creates highmap\n    * @param {Object} options - options for HighMap chart\n    * @param {String} containerID - container for rendering map\n    * @param {Object} data - input data for highmap\n    * @param {String} map - key for Higchart.maps\n    * @param {Array} dataClasses - set of colored groups for map\n    * @param {Array} columnHeaders an array where <key>: column name and <value>:column header\n    */\n    static createMap(options, containerID, data, map, dataClasses,columnHeaders){\n      let config = {\n            chart: {\n                borderWidth: 1\n            },\n\n            title: {\n                text: ''\n            },\n\n            legend: {\n                layout: 'horizontal',\n                borderWidth: 0,\n                backgroundColor: 'rgba(255,255,255,0.85)',\n                floating: false,\n                verticalAlign: 'bottom',\n                y: 10\n            },\n\n            mapNavigation: {\n                enabled: true\n            },\n\n            colorAxis: {\n              dataClasses\n            },\n\n            series: [{\n                data,\n                mapData: Highcharts.maps[map],\n                joinBy: ['name', 'name'],\n                allAreas: false,\n                dataLabels: {\n                    enabled: true,\n                    color: '#FFFFFF',\n                    format: '{point.name}'\n                },\n                name: `<b>${columnHeaders.value}</b>`,\n                tooltip: {\n                    pointFormat: HighMapsNPS.composeOutput(columnHeaders)\n                }\n            }]\n        };\n      config = HighMapsNPS.mixin(config,options);\n      Highcharts.mapChart(containerID, config);\n    }\n}\n\nexport default HighMapsNPS\n\n\n\n// WEBPACK FOOTER //\n// ./src/highmaps-nps.js"],"sourceRoot":""}